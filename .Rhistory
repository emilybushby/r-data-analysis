download.file("https://ndownloader.figshare.com/files/2292169",
"data/portal_data_joined.csv")
download.file("https://ndownloader.figshare.com/files/2292169",
"data/portal_data_joined.csv")
download.file("https://ndownloader.figshare.com/files/2292169",
"portal_data_joined.csv")
surveys <- read.csv("data/portal_data_joined.csv")
surveys <- read.csv("data/portal_data_joined.csv")
surveys <- read.csv("desktop/Data-analysis/data/portal_data_joined.csv")
surveys <- read.csv("/Users/emilybushby/Desktop/Data-analysis/data/portal_data_joined.csv")
surveys <- read.csv("Desktop/Data-analysis/data/portal_data_joined.csv")
surveys <- read.csv("data/portal_data_joined.csv")
surveys <- read.csv("data/portal_data_joined.csv")
surveys <- read.csv("data /portal_data_joined.csv")
head(surveys)
source('~/Desktop/Data-analysis/1_starting_with_data.R')
str(surveys)
surveys[1, 1]
surveys[1, 6]  ## first element in the sixth coloumn
surveys[1:3]   ## first three elements in the seventh coloumn
surveys[1:3, 7]   ## first three elements in the seventh coloumn
surveys[ ,1]    ## all the values in the first coloumn
surveys[8:11, ] ## all that values in rows 8-11
row200 <- surveys[200,]
row200
surveys_200 <- row200
nrow(surveys_200)
tail(surveys_200)
nrow(x)
nrow(surveys)
tail(surveys)
surveys[34786,]
surveys_last <- surveys[34786,]
34786/2
nrow(17393)
nrow(surveys)
nrow(tail(surveys))
surveys_middle <- surveys[34786/2,]
surveys_middle
surveys_head <- surveys[-(7:n_rows), ]
n_rows <- nrow(surveys)
surveys_head <- surveys[-(7:n_rows), ]
View(surveys_head)
sex <- (c("male", "female", "female", "male"))
sex
levels(sex)
nlevels(sex)
sex <- factor(c("male", "female", "female", "male"))
sex
levels(sex)
nlevels(sex)
plot(surveys$sex)
sex <- surveys$sex
levels(sex)
levels(sex)[1] <- "Undermined"
levels(sex)
levels(sex)[2] <- "Female"
levels(sex)
levels(sex)[3] <- "Male"
levels(sex)
levels(sex)[2:3] <- c("Female", "Male")
levels(sex)
levels(sex)[1] <- "Undetermined"
sex <- factor(sex, levels=c("Female", "Male", "Undetermined"))
levels(sex)
plot(surveys$sex)
sex <- factor(sex, levels=c("Female", "Male", "Undetermined"))
plot(sex)
library(tidyverse)
require(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse")
install.packages("tidyverse")
## Installing tidyverse
install.packages("tidyverse")
library("tidyverse")
version
version
## Installing tidyverse
install.packages("tidyverse")
library("tidyverse")
head(surveys)
surveys
surveys <- read_csv("data/portal_data_joined.csv")
surveys <- read_csv("data /portal_data_joined.csv")
head(surveys)
surveys
colnames(surveys)
## Use square bracket substetting to select rows from 1978 only
surveys["1978", 0]
surveys[surveys=="1978", 0]
## Use square bracket substetting to select rows from 1978 only
surveys["1978", 0]
## Use square bracket substetting to select rows from 1978 only
surveys["1978", ]
## Use square bracket substetting to select rows from 1978 only
surveys[year=="1978", ]
## Use square bracket substetting to select rows from 1978 only
surveys[surveys$year=="1978", ]
filter(surveys, year == 1978)
## select - used to select coloumns
select(surveys, year, plot_id, species_id)
## select only the three coloumns above but only from 1978
surveys_filtered <- select(surveys, year, plot_id, species_id)
surveys_filtered$year=="1978"
select(surveys_filtered, year, plot_id, species_id)
## select only the three coloumns above but only from 1978
surveys_filtered <- select(surveys, year==1978)
select(surveys_filtered, year, plot_id, species_id)
## select only the three coloumns above but only from 1978
surveys_filtered <- select(surveys, year==1978)
## select only the three coloumns above but only from 1978
surveys_filtered <- select(surveys, year="1978")
## select only the three coloumns above but only from 1978
surveys_filtered <- filter(surveys, year="1978")
## select only the three coloumns above but only from 1978
surveys_filtered <- filter(surveys, year=="1978")
select(surveys_filtered, year, plot_id, species_id)
%>%
surveys %>%
filter(year ==1978) %>%
select(year, plot_id, species_id)
surveys %>%
filter(year ==1978) %>%
select(year, plot_id, species_id)
surveys_pipe <-
surveys %>%
filter(year ==1978) %>%
select(year, plot_id, species_id)
?select
## mutate - to create new coloumns based on existing coloumns or on some oporations done on existing coloumns
surveys %>%
select(weight, species)
surveys %>%
mutate(weight_kg = weight/1000)
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(start_with("w"))
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with("w"))
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
surveys %>%
select(species_id, hindfoot_length) %>%
mutate(hindfoot_half = hindfoot_length/2)
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
Challenge_one <-
surveys %>%
select(species_id, hindfoot_length) %>%
mutate(hindfoot_half = hindfoot_length/2)
View(Challenge_one)
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
challenge_one <-
surveys %>%
select(species_id, hindfoot_length) %>%
mutate(hindfoot_half = hindfoot_length/2)
challenge_one
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
challenge_one <-
surveys %>%
mutate(hindfoot_half = hindfoot_length/2)
select(species_id, hindfoot_half==30>) %>%
challenge_one
select(species_id, hindfoot_half) %>%
challenge_one
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
challenge_one <-
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
select(species_id, hindfoot_half)
challenge_one
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
challenge_one <-
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
select(species_id, hindfoot_half<30)
challenge_one
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
challenge_one <-
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
select(species_id, hindfoot_half) %>%
select(hindfoot_half<30)
## CHALLENGE 1 ##
## Create new dataframe from surveys that contains:
## species_id coloumn and a new coloumn called hindfood_half containinghalf of the values from the hindfoot_length coloumn
## all the values in hindfoot_half should be less than 30
challenge_one <-
surveys %>%
mutate(hindfoot_half = hindfoot_length/2) %>%
select(species_id, hindfoot_half) %>%
filter(hindfoot_half<30)
challenge_one
## How to remove missing observations
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with("w")) %>%
filter(is.na(weight))
## How to remove missing observations
surveys %>%
mutate(weight_kg = weight/1000) %>%
select(starts_with("w")) %>%
filter(!is.na(weight)) ## filters out rows in coloumn weight that are not NA. Removing "!" will show you all the NAs
summary(surveys)
## How to get a summary overview of a dataset
table(surveys)
## How to get a summary overview of a dataset
table(surveys$year)
length(table(surveys$year))
range(surveys$year)
summary(surveys)
## Splitting and running calulations on groups
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length))
## Splitting and running calulations on groups
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length,
na.rm = TRUE))
surveys %>%
group(sex, species_id)
surveys %>%
group_by(sex, species_id)
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight),
min_weight = min(weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight),
min_weight = min(weight),
sd_weight = sd(weight))
surveys %>%
count(sex)
surveys %>%
count(sex, species)
surveys %>%
count(sex, species) %>%
print(n=81)
surveys %>%
count(sex, species) %>%
print(n = 81)
surveys %>%
count(sex, species) %>%
print(n = 81)
surverys %>%
count(species, sort = TRUE)
surverys %>%
count(species, sort = TRUE)
surveys %>%
count(species, sort = TRUE)
## arrange - used to arrange rows
surveys %>%
count(sex, species) %>%
arrange(species, desc(n))
## CHALLENGE 2 ##
## How many individuals were caught in each plot_type
surveys %>%
summarise(plot_type)
## CHALLENGE 2 ##
## How many individuals were caught in each plot_type
surveys %>%
summarise(a=plot_type)
## CHALLENGE 2 ##
## How many individuals were caught in each plot_type
surveys %>%
count(plot_type)
## CHALLENGE 2 ##
## How many individuals were caught in each plot_type. Answer in 2 ways (using group_by and count)
surveys %>%
count(plot_type)
surveys %>%
group_by(plot_type)
## CHALLENGE 2 ##
## How many individuals were caught in each plot_type. Answer in 2 ways (using group_by and count)
surveys %>%
group_by(plot_type) %>%
count(plot_type)
surveys %>%
count(plot_type)
surveys %>%
group_by(plot_type)
surveys %>%
count(group_by(plot_type))
surveys %>%
group_by(plot_type) %>%
n(,)
surveys %>%
group_by(plot_type) %>%
n(plot_type)
surveys %>%
group_by(plot_type) %>%
n( ,plot_type)
surveys %>%
group_by(plot_type) %>%
tally()
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
filter(!is.na(year, genus, species_id, weight)) %>%
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
arrange(species_id, year, genus, weight, desc(n)) %>%
filter(!is.na(year, genus, species_id, weight))
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
arrange(species_id, year, genus, weight, desc(n)) %>%
filter(!is.na(weight))
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
arrange(species_id, year, genus, weight, desc(n))
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
arrange(year, desc(n))
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
arrange(year, desc(n))  %>%
filter(!is.na(year, genus, species_id, weight))
surveys %>%
count(species, sort = TRUE)
surveys %>%
count(species_id, year, genus, weight, sort = TRUE)
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
group_by(year, genus, species_id, weight) %>%
summarise(max_weight_year = max(weight, na.rm = TRUE))
?na.rm
??na.rm
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
group_by(year) %>%
summarise(max_weight_year = max(weight, na.rm = TRUE))
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
group_by(year) %>%
summarise(max_weight_year = max(weight, na.rm = TRUE)) %>%
select(year, genus, species_id, weight, max_weight_year)
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
summarise(max_weight_year = max(weight, na.rm = TRUE))
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
summarise(max_weight_year = max(weight, na.rm = TRUE)) %>%
arrange(desc(max_weight_year))
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight = max(weight)) %>%
select(year, genus, species_id, weight)
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight)
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight) %>%
arrange(weight)
## CHALLENGE 3 ##
## What is the heaviest animlal mesured in each year?
## Return coloumns year, genus, species_id, and weight. Do not return missing observations
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight) %>%
arrange(desc(weight))
surveys_complete <- surveys %>%
filter(!is.na(weight)
!is.na(hindfoot_length),
!is.na(sex))
surveys_complete <-
surveys %>%
filter(!is.na(weight)
!is.na(hindfoot_length),
!is.na(sex))
filter(!is.na(weight, hindfoot_length,sex)
surveys_complete <-
surveys %>%
filter(!is.na(weight, hindfoot_length,sex))
surveys_complete <-
surveys %>%
filter(!is.na(weight),
!is.na(hindfoot_length),
!is.na(sex))
species_counts <- surveys_complete %>%
count(species_id) %>%
filter(n>=50)
##CHALLENGE 4 ##
## Reduce the surveys_complete object so that it only contains species with at least 50 observations
## (these species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts %in% species_counts$species_id)
View(surveys_complete)
##CHALLENGE 4 ##
## Reduce the surveys_complete object so that it only contains species with at least 50 observations
## (these species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
##CHALLENGE 4 ##
## Reduce the surveys_complete object so that it only contains species with at least 50 observations
## (these species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id%in%species_counts$species_id)
##CHALLENGE 4 ##
## Reduce the surveys_complete object so that it only contains species with at least 50 observations
## (these species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
View(surveys_complete)
## Reduce the surveys_complete object so that it only contains species with at least 50 observations
## (these species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
## Keep the species for which there are more than 50 observations
surveys_complete <-
surveys %>%
filter(!is.na(weight),
!is.na(hindfoot_length),
!is.na(sex))
species_counts <- surveys_complete %>%
count(species_id) %>%
filter(n>=50)
## Reduce the surveys_complete object so that it only contains species with at least 50 observations
## (these species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
View(surveys_complete)
%in%
?%in%
? %in%
dim(surveys_complete)
write_csv(surveys_complete, "data/surveys_complete.csv")
write_csv(surveys_complete, "data/surveys_complete.csv")
### How to plot with ggplot ###
ggplot(data = surveys_complete)
### How to plot with ggplot ###
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfood_length))
### How to plot with ggplot ###
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length))
### How to plot with ggplot ###
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point()
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) + geom_point() + col(pink)
surveys_plot <- ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length))
surveys_plot  + geom_point()
surveys_plot + geom_point() + colours(red)
